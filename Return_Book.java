package Coding;

import Tables.Returned_Table;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Hadi
 */
public class Return_Book extends javax.swing.JFrame {
 
    File file = new File("Icon.png");
    String absolutePath = file.getAbsolutePath().replace("Icon.png", "\\src\\Images\\Icon.png");
    ImageIcon FrameIcon = new ImageIcon(absolutePath);
    public String Online = "NO";
    
    public Return_Book() {
        initComponents();
        this.setIconImage(FrameIcon.getImage());
        jTextBenifit.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextBookName = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextBookPublisher = new javax.swing.JTextField();
        jTextPrice = new javax.swing.JTextField();
        jTextLocation = new javax.swing.JTextField();
        jButtonRentBook = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButtonSearchRent = new javax.swing.JButton();
        jTextCustomerName = new javax.swing.JTextField();
        jTextCustomerPhone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        DateOfIssue = new datechooser.beans.DateChooserCombo();
        jLabel12 = new javax.swing.JLabel();
        jTextMoneyGivenBack = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldPay1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        dateOfReturned = new datechooser.beans.DateChooserCombo();
        jLabel16 = new javax.swing.JLabel();
        jLabelBookPublisher = new javax.swing.JLabel();
        jLabelBookPublisher1 = new javax.swing.JLabel();
        jLabelBookPublisher2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        jTextBenifit = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelPictureBook = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabelPicture = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(216, 216, 216));

        jTextBookName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextBookName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextBookName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextBookNameKeyTyped(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Return Book");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        jTextBookPublisher.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextBookPublisher.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPrice.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextLocation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextLocation.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jButtonRentBook.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRentBook.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonRentBook.setText("Return");
        jButtonRentBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonRentBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonRentBookMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonRentBookMouseExited(evt);
            }
        });
        jButtonRentBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRentBookActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton3.setText("Returned Book List");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3MouseExited(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButtonSearchRent.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSearchRent.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonSearchRent.setText("Search");
        jButtonSearchRent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSearchRent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonSearchRentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonSearchRentMouseExited(evt);
            }
        });
        jButtonSearchRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchRentActionPerformed(evt);
            }
        });

        jTextCustomerName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextCustomerName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextCustomerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextCustomerNameKeyTyped(evt);
            }
        });

        jTextCustomerPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextCustomerPhone.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextCustomerPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextCustomerPhoneKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Customer Name :");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Customer Phone :");

        DateOfIssue.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    DateOfIssue.setFieldFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 13));
    DateOfIssue.setMaxDate(new java.util.GregorianCalendar(2022, 6, 1));
    DateOfIssue.setMinDate(new java.util.GregorianCalendar(2021, 6, 1));

    jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
    jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel12.setText("Date of Issue :");

    jTextMoneyGivenBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jTextMoneyGivenBack.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    jTextMoneyGivenBack.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jTextMoneyGivenBackKeyTyped(evt);
        }
    });

    jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
    jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel13.setText("Returned Money :");

    jTextFieldPay1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jTextFieldPay1.setHorizontalAlignment(javax.swing.JTextField.LEFT);

    jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
    jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel14.setText("Money Paid :");

    dateOfReturned.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));
dateOfReturned.setFieldFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 13));
dateOfReturned.setMaxDate(new java.util.GregorianCalendar(2022, 6, 1));
dateOfReturned.setMinDate(new java.util.GregorianCalendar(2021, 6, 1));

jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabel16.setText("Book Name :");

jLabelBookPublisher.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
jLabelBookPublisher.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabelBookPublisher.setText("Book Publisher :");

jLabelBookPublisher1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
jLabelBookPublisher1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabelBookPublisher1.setText("Book Price :");

jLabelBookPublisher2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
jLabelBookPublisher2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabelBookPublisher2.setText("Book Location :");

jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

jLabel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabel15.setText("Date of Returned :");

jTextBenifit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
jTextBenifit.setHorizontalAlignment(javax.swing.JTextField.LEFT);

jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabel2.setText("Benifit :");

jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
jLabel3.setForeground(new java.awt.Color(0, 153, 51));
jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabel3.setText("Enter This Three Field and Click Search");

jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
jLabel4.setForeground(new java.awt.Color(0, 153, 51));
jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabel4.setText("Person");

jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
jLabel5.setForeground(new java.awt.Color(0, 153, 51));
jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabel5.setText("Book Cover");

jPanel3.setBackground(new java.awt.Color(255, 255, 255));

jLabelPictureBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
jLabelPictureBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
jPanel3.setLayout(jPanel3Layout);
jPanel3Layout.setHorizontalGroup(
    jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addComponent(jLabelPictureBook, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jLabelPictureBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
    );

    jPanel4.setBackground(new java.awt.Color(255, 255, 255));

    jLabelPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabelPicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jLabelPicture, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jLabelPicture, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(dateOfReturned, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(27, 27, 27))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextMoneyGivenBack, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextBenifit)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(74, 74, 74)))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButtonRentBook, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldPay1))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(DateOfIssue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelBookPublisher1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelBookPublisher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelBookPublisher2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextLocation)
                                .addComponent(jTextBookPublisher, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                .addComponent(jTextPrice))))
                    .addGap(12, 12, 12))
                .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(189, 189, 189))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextBookName, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                        .addComponent(jTextCustomerName)
                        .addComponent(jTextCustomerPhone))
                    .addGap(12, 12, 12))
                .addComponent(jButtonSearchRent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(13, 13, 13))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(27, 27, 27)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextMoneyGivenBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextBenifit)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateOfReturned, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(21, 21, 21)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonRentBook, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(68, 68, 68))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator2))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonSearchRent, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(jTextBookName)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(51, 51, 51)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextBookPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(jLabelBookPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(9, 9, 9)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelBookPublisher1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(8, 8, 8)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelBookPublisher2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(DateOfIssue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(9, 9, 9)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldPay1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(67, 67, 67))))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRentBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRentBookActionPerformed
       
        if(Online.equals("YES")&& !jTextBenifit.getText().equals("")){
            if (DeleteIssueBook_Online()== true)
                Insert_To_ReturnBookTable_Online();  
            else
                JOptionPane.showMessageDialog(this, "This Book Already Returned");
        }
        else if(!jTextBenifit.getText().equals("")){
            if (DeleteIssueBook() == true)
                Insert_To_ReturnBookTable();
            else
                JOptionPane.showMessageDialog(this, "This Book Already Returned");
        }
        else
            JOptionPane.showMessageDialog(this, "Please Calculate the Benifit");
    }//GEN-LAST:event_jButtonRentBookActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(Online.equals("YES")) {
            Returned_Table returned = new Returned_Table();
            returned.Online = "YES";
            returned.setVisible(true);
            returned.pack();
            returned.setLocationRelativeTo(null);
        }
        else{
            Returned_Table returned = new Returned_Table();
            returned.setVisible(true);
            returned.pack();
            returned.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextMoneyGivenBackKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextMoneyGivenBackKeyTyped
        char num = evt.getKeyChar();
        if(num == KeyEvent.VK_ENTER){
        int moneyPaid = Integer.valueOf(jTextFieldPay1.getText());
        int moneyBack = Integer.valueOf(jTextMoneyGivenBack.getText());
        int calculated = moneyPaid - moneyBack;
        jTextBenifit.setText(String.valueOf(calculated));
        }
    }//GEN-LAST:event_jTextMoneyGivenBackKeyTyped

    private void jTextCustomerPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCustomerPhoneKeyTyped
        char num = evt.getKeyChar();
        if(num == KeyEvent.VK_ENTER )
        jButtonSearchRent.grabFocus();
    }//GEN-LAST:event_jTextCustomerPhoneKeyTyped

    private void jTextCustomerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCustomerNameKeyTyped
        char num = evt.getKeyChar();
        if(num == KeyEvent.VK_ENTER )
        jTextCustomerPhone.grabFocus();
    }//GEN-LAST:event_jTextCustomerNameKeyTyped
    
    private void jButtonSearchRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchRentActionPerformed
        if(Online.equals("YES"))  {
            Search_Book_Online();
        }
        else {
            Search_Book();
        }
    }//GEN-LAST:event_jButtonSearchRentActionPerformed

    private void jButtonSearchRentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSearchRentMouseEntered
        jButtonSearchRent.setBackground(Color.BLACK);
        jButtonSearchRent.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButtonSearchRentMouseEntered

    private void jButtonSearchRentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSearchRentMouseExited
        jButtonSearchRent.setBackground(Color.WHITE);
        jButtonSearchRent.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButtonSearchRentMouseExited

    private void jTextBookNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextBookNameKeyTyped
        char num = evt.getKeyChar();
        if(num == KeyEvent.VK_ENTER )
        jTextCustomerName.grabFocus();
    }//GEN-LAST:event_jTextBookNameKeyTyped

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
        jButton3.setBackground(Color.BLACK);
        jButton3.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton3MouseEntered

    private void jButtonRentBookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRentBookMouseEntered
        jButtonRentBook.setBackground(Color.BLACK);
        jButtonRentBook.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButtonRentBookMouseEntered

    private void jButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseExited
        jButton3.setBackground(Color.WHITE);
        jButton3.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButton3MouseExited

    private void jButtonRentBookMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRentBookMouseExited
        jButtonRentBook.setBackground(Color.WHITE);
        jButtonRentBook.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButtonRentBookMouseExited

    private byte[] getbookpicture(){   
        conn con = new conn();        
        String sql = "  select * from book where bookName = ?";
        try {
        PreparedStatement st = con.c.prepareStatement(sql);
        st.setString(1, jTextBookName.getText());
        ResultSet rs = st.executeQuery();
        rs.next();
        
        if (rs.getBytes("picture") == null){
                st.close();
                con.c.close();
            return null;
        }
        else{
                byte[] picture = rs.getBytes("picture");
                st.close();
                con.c.close();
                return picture;
        } 
                 
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Database Error"+e.getMessage());
        }
        return null;
    }
    private byte[] getbookpicture_Online(){   
        conn con = new conn("YES");        
        String sql = "  select * from book where bookName = ?";
        try {
        PreparedStatement st = con.c.prepareStatement(sql);
        st.setString(1, jTextBookName.getText());
        ResultSet rs = st.executeQuery();
        rs.next();
        
        if (rs.getBytes("picture") == null){
                st.close();
                con.c.close();
            return null;
        }
        else{
                byte[] picture = rs.getBytes("picture");
                st.close();
                con.c.close();
                return picture;
        } 
                 
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Database Error"+e.getMessage());
        }
        return null;
    }
    
    
    private boolean check_Issued_Book_Image(){
        conn con = new conn();
        
        String sql = "  select * from issuebook where"
                + " (  bookName = "+'"'+jTextBookName.getText()+'"'+" and  customerName ="
                + " "+'"'+jTextCustomerName.getText()+'"'+" and  customerPhone ="
                + " "+'"'+jTextCustomerPhone.getText()+'"'+" );  ";
        try {
        PreparedStatement st = con.c.prepareStatement(sql);
        ResultSet rs = st.executeQuery();
        rs.next();
        
        if (rs.getBytes("picture") == null){
                st.close();
                con.c.close();
            return false;
        }
        else{
                st.close();
                con.c.close();
                return true;
        } 
                 
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Database Error");
        }
        return true;
    }
    private boolean check_Issued_Book_Image_Online(){
        conn con = new conn("YES");
        
        String sql = "  select * from issuebook where"
                + " (  bookName = "+'"'+jTextBookName.getText()+'"'+" and  customerName ="
                + " "+'"'+jTextCustomerName.getText()+'"'+" and  customerPhone ="
                + " "+'"'+jTextCustomerPhone.getText()+'"'+" );  ";
        try {
        PreparedStatement st = con.c.prepareStatement(sql);
        ResultSet rs = st.executeQuery();
        rs.next();
        
        if (rs.getBytes("picture") == null){
                st.close();
                con.c.close();
            return false;
        }
        else{
                st.close();
                con.c.close();
                return true;
        }                 
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Database Error");
        }
        return true;
    }
    
    

    private void Insert_To_ReturnBookTable() {
         String sql = "insert into returned_Book (bookName, customerName, customerPhone, PublisherName, price, dateOfIssue, dateOfReturned, moneyRecived) values(?, ?, ?, ?, ?, ?, ?, ?)";
                try{
                conn con = new conn();
		PreparedStatement st = con.c.prepareStatement(sql);
		st.setString(1, jTextBookName.getText());
		st.setString(2, jTextCustomerName.getText());
		st.setString(3, jTextCustomerPhone.getText());
		st.setString(4, jTextBookPublisher.getText());
		st.setString(5, jTextPrice.getText());
		st.setString(6, DateOfIssue.getText());
		st.setString(7, dateOfReturned.getText());
                st.setString(8, jTextBenifit.getText());
		int i = st.executeUpdate();
                    st.close();
                    con.c.close();

                } catch(SQLException | HeadlessException e){
                    JOptionPane.showMessageDialog(this, "DataBase Error");
                }
     }
    private void Insert_To_ReturnBookTable_Online(){
         String sql = "insert into returned_Book (bookName, customerName, customerPhone, PublisherName, price, dateOfIssue, dateOfReturned, moneyRecived) values(?, ?, ?, ?, ?, ?, ?, ?)";
                try{
                conn con = new conn("YES");
		PreparedStatement st = con.c.prepareStatement(sql);
		st.setString(1, jTextBookName.getText());
		st.setString(2, jTextCustomerName.getText());
		st.setString(3, jTextCustomerPhone.getText());
		st.setString(4, jTextBookPublisher.getText());
		st.setString(5, jTextPrice.getText());
		st.setString(6, DateOfIssue.getText());
		st.setString(7, dateOfReturned.getText());
                st.setString(8, jTextBenifit.getText());               
		int i = st.executeUpdate();
                if (i > 0)
                JOptionPane.showMessageDialog(null, "Book Recieved");
                else{
                JOptionPane.showMessageDialog(null, "Error Please Try Again!");
                }
                    st.close();
                    con.c.close();
                }catch(SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(this, "Network Error");
                }
    }   
    public Boolean DeleteIssueBook_Online() {
        try {
            conn con = new conn("YES");
            String sql = "DELETE FROM issueBook "
                                +" WHERE( bookName = "+'"'+jTextBookName.getText()+'"'+" AND"
                                +" customerPhone="+'"'+jTextCustomerPhone.getText()+'"'+" )";
            PreparedStatement st = con.c.prepareStatement(sql);
            int rs = st.executeUpdate();
                if( rs > 0){
                    st.close();
                    con.c.close();
                    return true;
                }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
	}
        return false;
    }
    
    public Boolean DeleteIssueBook() {
        try {
            conn con = new conn();
            String sql = "DELETE FROM issueBook "
                                +" WHERE( bookName = "+'"'+jTextBookName.getText()+'"'+" AND"
                                +" customerPhone="+'"'+jTextCustomerPhone.getText()+'"'+" )";
            PreparedStatement st = con.c.prepareStatement(sql);
            int rs = st.executeUpdate();
                if( rs > 0){
                    st.close();
                    con.c.close();
                    return true;
                }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
	}
        return false;
    }
    
    
    private void Search_Book() {
        String BookName = jTextBookName.getText();
        String CustomerName = jTextCustomerName.getText();
        String CustomerPhone = jTextCustomerPhone.getText();

        String sql = "  select * from issuebook where"
        + " (  bookName = "+'"'+BookName+'"'+" and  customerName = "+'"'+CustomerName+'"'+" and  customerPhone = "+'"'+CustomerPhone+'"'+" );  ";
        try {
            conn con = new conn();
            PreparedStatement st = con.c.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            rs.next();
//            System.out.println(rs.getRow());

            if(rs.getRow() == 1 && check_Issued_Book_Image() == true){
                jTextBookName.setText(rs.getString("bookName"));
                jTextCustomerName.setText(rs.getString("customerName"));
                jTextCustomerPhone.setText(rs.getString("customerPhone"));
                jTextBookPublisher.setText(rs.getString("PublisherName"));
                jTextPrice.setText(rs.getString("price"));
                DateOfIssue.setText(rs.getString("dateOfIssue"));
                jTextFieldPay1.setText(rs.getString("moneyPaid"));
                jTextLocation.setText(rs.getString("location"));
                byte [] blob = rs.getBytes("picture");
                
                try {
                    InputStream in = new ByteArrayInputStream(blob);
                    Image image = ImageIO.read(in);
                    Image a = image.getScaledInstance(200, 205, Image.SCALE_DEFAULT);
                    jLabelPicture.setIcon(new ImageIcon(a));
                    
                    if(getbookpicture()==null)
                    jLabelPictureBook.setText("No Picture");
                    else {
                        byte [] picture = getbookpicture();
                        InputStream inBook = new ByteArrayInputStream(picture);
                        Image imageBook = ImageIO.read(inBook);
                        Image aBook = imageBook.getScaledInstance(200, 205, Image.SCALE_DEFAULT);
                        jLabelPictureBook.setIcon(new ImageIcon(aBook));
                    }
    
                }   catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Database Error");
                }
                st.close();
                con.c.close(); 
            }
            else if(rs.getRow() == 1 && check_Issued_Book_Image() == false){
                jTextBookName.setText(rs.getString("bookName"));
                jTextCustomerName.setText(rs.getString("customerName"));
                jTextCustomerPhone.setText(rs.getString("customerPhone"));
                jTextBookPublisher.setText(rs.getString("PublisherName"));
                jTextPrice.setText(rs.getString("price"));
                DateOfIssue.setText(rs.getString("dateOfIssue"));
                jTextFieldPay1.setText(rs.getString("moneyPaid"));
                jTextLocation.setText(rs.getString("location"));
                st.close();
                con.c.close(); 
            }

            else {
                JOptionPane.showMessageDialog(this, "This Customer Has not booked this book with this details");
                jTextBookName.setText("");
                jTextCustomerName.setText("");
                jTextCustomerPhone.setText("");
                jTextBookName.setText("");
                jTextCustomerName.setText("");
                jTextCustomerPhone.setText("");
                jTextBookPublisher.setText("");
                jTextPrice.setText("");
                jTextLocation.setText("");
                jTextFieldPay1.setText("");
                jLabelPictureBook.setIcon(null);
                jLabelPicture.setIcon(null);
            }
            st.close();
            rs.close();
            jTextMoneyGivenBack.grabFocus();
        }catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(this,"database Error");
        }
    }
    public void Search_Book_Online() {
        String BookName = jTextBookName.getText();
        String CustomerName = jTextCustomerName.getText();
        String CustomerPhone = jTextCustomerPhone.getText();

        String sql = "  select * from issuebook where"
        + " (  bookName = "+'"'+BookName+'"'+" and  customerName = "+'"'+CustomerName+'"'+" and  customerPhone = "+'"'+CustomerPhone+'"'+" );  ";
        try {
            conn con = new conn("YES");
            PreparedStatement st = con.c.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            rs.next();
//            System.out.println(rs.getRow());

            if(rs.getRow() == 1 && check_Issued_Book_Image_Online() == true){
                jTextBookName.setText(rs.getString("bookName"));
                jTextCustomerName.setText(rs.getString("customerName"));
                jTextCustomerPhone.setText(rs.getString("customerPhone"));
                jTextBookPublisher.setText(rs.getString("PublisherName"));
                jTextPrice.setText(rs.getString("price"));
                DateOfIssue.setText(rs.getString("dateOfIssue"));
                jTextFieldPay1.setText(rs.getString("moneyPaid"));
                jTextLocation.setText(rs.getString("location"));
                byte [] blob = rs.getBytes("picture");
                
                try {
                    InputStream in = new ByteArrayInputStream(blob);
                    Image image = ImageIO.read(in);
                    Image a = image.getScaledInstance(200, 205, Image.SCALE_DEFAULT);
                    jLabelPicture.setIcon(new ImageIcon(a));
                    
                    if(getbookpicture_Online()==null)
                    jLabelPictureBook.setText("No Picture");
                    else {
                        byte [] picture = getbookpicture_Online();
                        InputStream inBook = new ByteArrayInputStream(picture);
                        Image imageBook = ImageIO.read(inBook);
                        Image aBook = imageBook.getScaledInstance(200, 205, Image.SCALE_DEFAULT);
                        jLabelPictureBook.setIcon(new ImageIcon(aBook));
                    }
    
                }   catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Database Error");
                }
                st.close();
                con.c.close(); 
            }
            else if(rs.getRow() == 1 && check_Issued_Book_Image_Online() == false){
                jTextBookName.setText(rs.getString("bookName"));
                jTextCustomerName.setText(rs.getString("customerName"));
                jTextCustomerPhone.setText(rs.getString("customerPhone"));
                jTextBookPublisher.setText(rs.getString("PublisherName"));
                jTextPrice.setText(rs.getString("price"));
                DateOfIssue.setText(rs.getString("dateOfIssue"));
                jTextFieldPay1.setText(rs.getString("moneyPaid"));
                jTextLocation.setText(rs.getString("location"));
                st.close();
                con.c.close(); 
            }

            else {
                JOptionPane.showMessageDialog(this, "This Customer Has not booked this book with this details");
                jTextBookName.setText("");
                jTextCustomerName.setText("");
                jTextCustomerPhone.setText("");
                jTextBookPublisher.setText("");
                jTextPrice.setText("");
                jTextLocation.setText("");
                jTextFieldPay1.setText("");
                jLabelPictureBook.setIcon(null);
                jLabelPicture.setIcon(null);
            }
            st.close();
            rs.close();
            jTextMoneyGivenBack.grabFocus();
        }catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(this,"database Error");
        }
    }
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Return_Book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Return_Book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Return_Book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Return_Book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Return_Book().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo DateOfIssue;
    private datechooser.beans.DateChooserCombo dateOfReturned;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonRentBook;
    private javax.swing.JButton jButtonSearchRent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelBookPublisher;
    private javax.swing.JLabel jLabelBookPublisher1;
    private javax.swing.JLabel jLabelBookPublisher2;
    private javax.swing.JLabel jLabelPicture;
    private javax.swing.JLabel jLabelPictureBook;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextBenifit;
    private javax.swing.JTextField jTextBookName;
    private javax.swing.JTextField jTextBookPublisher;
    private javax.swing.JTextField jTextCustomerName;
    private javax.swing.JTextField jTextCustomerPhone;
    private javax.swing.JTextField jTextFieldPay1;
    private javax.swing.JTextField jTextLocation;
    private javax.swing.JTextField jTextMoneyGivenBack;
    private javax.swing.JTextField jTextPrice;
    // End of variables declaration//GEN-END:variables
}
