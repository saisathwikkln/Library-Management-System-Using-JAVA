/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Settings;

import Coding.conn;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Hadi
 */
public class Settings extends javax.swing.JFrame {

    private TableRowSorter sorter;
    Font headerFont = new Font("Arial", Font.BOLD, 18);
    JTableHeader tableHeader; 
    DefaultTableCellRenderer renderer;
    public String Online = "NO";
    
    public Settings() {
        initComponents();
        
        // this code set table header font size
        this.tableHeader = jTableAccount.getTableHeader();
        tableHeader.setFont(headerFont);

        // this code center the table header
        this.renderer = (DefaultTableCellRenderer) 
        jTableAccount.getTableHeader().getDefaultRenderer();  
        renderer.setHorizontalAlignment(SwingConstants.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAccount = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextSearchAccount = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(6, 14, 23));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableAccount.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTableAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Password", "Question", "Answer"
            }
        ));
        jTableAccount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTableAccount.setIntercellSpacing(new java.awt.Dimension(2, 2));
        jTableAccount.setRowHeight(25);
        jTableAccount.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(jTableAccount);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 570, 250));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SettingLock.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 110, 100));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("User Settings");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 240, 60));

        jTextSearchAccount.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextSearchAccount.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextSearchAccount.setText("Search");
        jTextSearchAccount.setToolTipText("");
        jTextSearchAccount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextSearchAccountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextSearchAccountFocusLost(evt);
            }
        });
        jTextSearchAccount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextSearchAccountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextSearchAccountKeyTyped(evt);
            }
        });
        jPanel1.add(jTextSearchAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 570, 40));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exit.png"))); // NOI18N
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 30, -1));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mini.png"))); // NOI18N
        jButton7.setContentAreaFilled(false);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.setFocusPainted(false);
        jButton7.setFocusable(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 30, 20));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton4.setText("Remove Account");
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setOpaque(true);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 210, 40));

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton6.setText("Sign Out");
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.setOpaque(true);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6MouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 210, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextSearchAccountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextSearchAccountFocusGained

        if(jTextSearchAccount.getText().trim().equals("Search")){
            jTextSearchAccount.setText("");
            jTextSearchAccount.setForeground(Color.black);

        }
    }//GEN-LAST:event_jTextSearchAccountFocusGained

    private void jTextSearchAccountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextSearchAccountFocusLost
        if(jTextSearchAccount.getText().trim().equals("")||
            jTextSearchAccount.getText().trim().equals("Search")){
            jTextSearchAccount.setText("Search");
            jTextSearchAccount.setForeground(new Color(153,153,153,153));
        }
    }//GEN-LAST:event_jTextSearchAccountFocusLost

    private void jTextSearchAccountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSearchAccountKeyReleased
       
    }//GEN-LAST:event_jTextSearchAccountKeyReleased

    private void jTextSearchAccountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSearchAccountKeyTyped
        DefaultTableModel model = (DefaultTableModel) jTableAccount.getModel();
        sorter = new TableRowSorter<>(model);
        jTableAccount.setRowSorter(sorter);
        char num = evt.getKeyChar();

        if(num == KeyEvent.VK_ENTER) {
            String str = jTextSearchAccount.getText();
            if(str.length() == 0) {
                sorter.setRowFilter(null);
            }else {
                sorter.setRowFilter(RowFilter.regexFilter(str));
            }
        }
    }//GEN-LAST:event_jTextSearchAccountKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(Online.equals("YES")){
            LoadAll_Account_Online();
        }
        else{
            LoadAll_IssuedAccounts();
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        setState(this.ICONIFIED);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        jButton4.setBackground(new Color(0,102,153));
        jButton4.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        jButton4.setForeground(Color.BLACK);
        jButton4.setBackground(Color.WHITE);
    }//GEN-LAST:event_jButton4MouseExited

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(Online.equals("YES"))
            DeleteAccount_Online();          
        else
            DeleteAccount();  
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
        jButton6.setBackground(new Color(0,102,153));
        jButton6.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseExited
        jButton6.setForeground(Color.BLACK);
        jButton6.setBackground(Color.WHITE);
    }//GEN-LAST:event_jButton6MouseExited

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void LoadAll_IssuedAccounts(){ 
    try {
            ResultSet rs;
            conn con = new conn();
            String sql ="SELECT * FROM account";
            DefaultTableModel modele = (DefaultTableModel) jTableAccount.getModel();        
            PreparedStatement st = con.c.prepareStatement(sql);
            rs = st.executeQuery();
            while(rs.next()){
            Object o[]= {rs.getString("username"), rs.getString("password"), rs.getString("sec_question")
                    ,rs.getString("sec_answer")};
            if(jTableAccount.getRowCount()!= Number_Of_Accounts()){    
                modele.addRow(o);
            }           
            }
                st.close();
                con.c.close();
        } catch(SQLException ex) {
              JOptionPane.showMessageDialog(this, "Error ");
            }
    }  
    private void LoadAll_Account_Online(){ 
    try {
            ResultSet rs;
            conn con = new conn("YES");
            String sql ="SELECT * FROM account";
            DefaultTableModel modele = (DefaultTableModel) jTableAccount.getModel();        
            PreparedStatement st = con.c.prepareStatement(sql);
            rs = st.executeQuery();
            while(rs.next()){
            Object o[]= {rs.getString("username"), rs.getString("password"), rs.getString("sec_question")
                    ,rs.getString("sec_answer")};
            if(jTableAccount.getRowCount()!= Number_Of_Accounts_Online()){    
                modele.addRow(o);
            }           
            }
                st.close();
                con.c.close();
        } catch(SQLException ex) {
              JOptionPane.showMessageDialog(this, "Error ");
            }
    } 
    private int Number_Of_Accounts_Online() {
        String query = "SELECT COUNT(*) FROM account";
        ResultSet rs;
        int numberRow = 0;
        try {
            conn con = new conn("YES");
            PreparedStatement st = con.c.prepareStatement(query);
            rs = st.executeQuery();
            while(rs.next()){
                    numberRow = rs.getInt("count(*)");
                }
                st.close();
                con.c.close();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Error");
            }     
            return numberRow;
    }
    
    private int Number_Of_Accounts() {
        String query = "SELECT COUNT(*) FROM account";
        ResultSet rs;
        int numberRow = 0;
        try {
            conn con = new conn();
            PreparedStatement st = con.c.prepareStatement(query);
            rs = st.executeQuery();
            while(rs.next()){
                    numberRow = rs.getInt("count(*)");
                }
                st.close();
                con.c.close();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Error");
            }     
            return numberRow;
    }
      private void DeleteAccount()  {
        DefaultTableModel model = 
            (DefaultTableModel) jTableAccount.getModel();
        if(jTableAccount.getSelectedRow() == -1){
            if(jTableAccount.getRowCount()==0) {
                JOptionPane.showMessageDialog(null, "No Row Has Been Selected",
                    "Error", JOptionPane.OK_OPTION);
            } else
            JOptionPane.showMessageDialog(null, "Select A Row to Be Deleted",
                "Library Management", JOptionPane.OK_OPTION);
        }
        else{
     
            Object[] options = {"Yes", "No"};
            int confirm = JOptionPane.showOptionDialog(this,
            "Are You Sure ?",
            "Warning",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,     //do not use a custom Icon
            options,  //the titles of buttons
            options[0]); //default button title
                if (confirm == JOptionPane.YES_OPTION) {
                    String username = jTableAccount.getValueAt(jTableAccount.getSelectedRow(), 0).toString();
                    String password = jTableAccount.getValueAt(jTableAccount.getSelectedRow(), 1).toString();
                    String sql = "DELETE FROM account"
                                +" WHERE( username = "+'"'+username+'"'+" AND"
                                +" password="+'"'+password+'"'+" )";
                    try {
                        conn con = new conn();
                        PreparedStatement st = con.c.prepareStatement(sql);
                        st.executeUpdate();
                        model.removeRow(jTableAccount.getSelectedRow());
                        st.close();
                        con.c.close();
                    } catch(Exception e) {
                        JOptionPane.showMessageDialog(null,"Error Database connections");
                    }
                    }
            }                
    }
      
      private void DeleteAccount_Online()  {
        DefaultTableModel model = 
            (DefaultTableModel) jTableAccount.getModel();
        if(jTableAccount.getSelectedRow() == -1){
            if(jTableAccount.getRowCount()==0) {
                JOptionPane.showMessageDialog(null, "No Row Has Been Selected",
                    "Error", JOptionPane.OK_OPTION);
            } else
            JOptionPane.showMessageDialog(null, "Select A Row to Be Deleted",
                "Library Management", JOptionPane.OK_OPTION);
        }
        else{
     
            Object[] options = {"Yes", "No"};
            int confirm = JOptionPane.showOptionDialog(this,
            "Are You Sure ?",
            "Warning",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,     //do not use a custom Icon
            options,  //the titles of buttons
            options[0]); //default button title
                if (confirm == JOptionPane.YES_OPTION) {
                    String username = jTableAccount.getValueAt(jTableAccount.getSelectedRow(), 0).toString();
                    String password = jTableAccount.getValueAt(jTableAccount.getSelectedRow(), 1).toString();
                    String sql = "DELETE FROM account"
                                +" WHERE( username = "+'"'+username+'"'+" AND"
                                +" password="+'"'+password+'"'+" )";
                    try {
                        conn con = new conn("YES");
                        PreparedStatement st = con.c.prepareStatement(sql);
                        st.executeUpdate();
                        model.removeRow(jTableAccount.getSelectedRow());
                        st.close();
                        con.c.close();
                    } catch(Exception e) {
                        JOptionPane.showMessageDialog(null,"Error Database connections");
                    }
                    }
            }                
    }
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAccount;
    private javax.swing.JTextField jTextSearchAccount;
    // End of variables declaration//GEN-END:variables
}
